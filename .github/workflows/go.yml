name: Go
on:
  pull_request:
    branches:
    - main
    - release-*
  push:
    branches:
    - main
    - release-*

jobs:
  # test:
  #   runs-on: [ubuntu-latest]
  #   steps:
  #   - name: Set up Go 1.15
  #     uses: actions/setup-go@v1
  #     with:
  #       go-version: 1.15
  #   - name: Check-out code
  #     uses: actions/checkout@v4
  #   - name: Run unit tests
  #     run: |
  #       make test
  test-integration:
    name: Integration test
    runs-on: [ubuntu-latest]
    steps:
      - name: Check-out code
        uses: actions/checkout@v4
      - name: Set up Go using version from go.mod
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-${{ env.go-cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.go-cache-name }}-
      - name: Run integration tests
        run: |
          make docker-test-integration

  tidy:
    runs-on: [ubuntu-latest]
    steps:
    - name: Check-out code
      uses: actions/checkout@v4
    - name: Set up Go using version from go.mod
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
    - name: Check tidiness
      run: |
        ./ci/check-tidy.sh

  golangci:
    runs-on: [ubuntu-latest]
    steps:
    - name: Check-out code
      uses: actions/checkout@v4
    - name: Run code linters
      run: |
        make golangci
